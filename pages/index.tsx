import { GetServerSideProps } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { useState } from 'react';
import { useRouter } from 'next/router';
import prisma from 'lib/prisma-client';
import FormGrocery from 'components/Formgrocery';
import { FormData, GroceryList } from 'interface/index';
import { deleteGroceries } from 'services/api';

import {
  Stack,
  Container,
  Box,
  useToast,
  Flex,
  Spacer,
} from '@chakra-ui/react';
import { DeleteIcon, EditIcon, StarIcon } from '@chakra-ui/icons';
import styles from '../styles/Home.module.css';

const Home = ({ grocery }: GroceryList) => {
  const [form, setForm] = useState<FormData>({
    name: '',
    quantity: 0,
    id: '',
  });
  const toast = useToast();
  const router = useRouter();
  async function deleteGrocery(id: String) {
    try {
      await deleteGroceries(id);
      toast({
        title: 'Grocery item deleted',
        description: 'We deleted your grocery inventory',
        status: 'success',
        duration: 3000,
        isClosable: true,
      });
    } catch (error) {
      toast({
        title: 'Grocery cannot be deleted',
        description: 'We could not delete your inventory',
        status: 'error',
        duration: 3000,
        isClosable: true,
      });
    }
    router.replace(router.asPath);
  }

  async function editGrocery(id: String, data: FormData) {
    setForm({
      name: data.name,
      quantity: data.quantity,
      id,
    });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Container maxW="container.md">
          <Flex>
            <Box textAlign="center">
              <Image
                src="/vegetable-icon.png"
                alt="vegetable"
                width="64"
                height="64"
              />
              <FormGrocery set={setForm} form={form} />
            </Box>
            <Spacer />
            <Box display="flex" flexDirection="column" alignItems="flex-start">
              <Stack spacing={4}>
                {grocery?.map((grocery, index) => (
                  <Box
                    key={index}
                    rounded={'lg'}
                    boxShadow={'lg'}
                    p={8}
                    display="flex"
                    alignItems={'center'}
                    justifyContent={'space-between'}
                  >
                    <Box mr="10" display="flex" alignItems="center">
                      <Box mr="4">
                        <StarIcon />
                      </Box>
                      <Box>
                        <h2>Item name: {grocery.name}</h2>
                        <p>{grocery.quantity} kg</p>
                      </Box>
                    </Box>
                    <Box display="flex" className={styles.actionButton}>
                      <button onClick={() => editGrocery(grocery.id, grocery)}>
                        <EditIcon />
                      </button>
                      <button onClick={() => deleteGrocery(grocery.id)}>
                        <DeleteIcon />
                      </button>
                    </Box>
                  </Box>
                ))}
                <br />
                <Box display="flex" alignItems="left">
                  {grocery.length === 0 && <>No grocery items ðŸ¥•</>}
                </Box>
              </Stack>
            </Box>
          </Flex>
        </Container>
      </main>
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async () => {
  const myGroceries = await prisma.grocery.findMany({
    select: {
      name: true,
      quantity: true,
      id: true,
    },
  });
  return {
    props: {
      grocery: myGroceries,
    },
  };
};
